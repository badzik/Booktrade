@model Booktrade.ViewModels.EditBookModel

@{
    ViewBag.Title = "Edytuj Książkę";
}

<head>
    <script src='~/scripts/jquery.form.js' type="text/javascript" language="javascript"></script>
    <script src='~/scripts/jquery.MetaData.js' type="text/javascript" language="javascript"></script>
    <script src='~/scripts/jQuery.MultiFile.js' type="text/javascript" language="javascript"></script>
    <script src="~/scripts/showImage.js"></script>
    <script src="~/scripts/AddBook.js"></script>
    <style>
        .form-group > * {
            margin-bottom: 10px;
        }
    </style>
    <link rel="stylesheet" href="~/Content/addImage.css">
</head>
<script src="/scripts/addImage.js"></script>
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.Id)
    <fieldset>
        <br />
        <legend>Edytuj książkę.</legend>
        <div class="col-sm-6 col-sm-offset-3">
            <form class="form-horizontal">
                <div class="form-group">
                    <label for="Title" class="col-sm-5 col-lg-3 control-label">Tytuł</label>
                    <div class="col-sm-7 col-lg-9">
                        @Html.TextBoxFor(m => m.Title,
new { @class = "form-control", placeholder = "Tytuł książki", required = "required", Type = "text" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Author" class="col-sm-5 col-lg-3 control-label">Autor</label>
                    <div class="col-sm-7 col-lg-9">
                        @Html.TextBoxFor(m => m.Author,
new { @class = "form-control", placeholder = "Autor książki", required = "required", Type = "text" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Description" class="col-sm-5 col-lg-3  control-label">Opis</label>
                    <div class="col-sm-7 col-lg-9">
                        @Html.TextAreaFor(m => m.Description,
new { @class = "form-control", placeholder = "Opis książki", required = "required", Type = "textarea", rows = "4" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Price" class="col-sm-5 col-lg-3 control-label">Cena</label>
                    <div class="col-sm-7 col-lg-9">
                        @Html.TextBoxFor(m => m.Price,
new { @class = "form-control", placeholder = "1234567890", Type = "number", min = "0" })
                    </div>

                </div>


                <div class="form-group">
                    <label for="BookImage" class="col-sm-5 col-lg-3 control-label">Zdjęcie główne</label>
                    <div class="col-sm-7 col-lg-9">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <span class="btn btn-default btn-file">
                                    Wybierz <input type="file" id="imgInp0" for="BookImage" name="BookImage0" value="@Model.BookImages.FirstOrDefault()">
                                </span>
                            </span>
                            <input type="text" class="form-control" readonly>
                        </div>

                        <img src="@Model.BookImages.FirstOrDefault()" id='img-upload0' />
                    </div>
                </div>


                @{int k = 1;
                    foreach (string img in @Model.BookImages.Skip(1))
                    {
                        string name = "BookImage" + k;
                        string idname = "imgInp" + k;
                        string idnameImg = "img-upload" + k;
                        <div class="form-group">
                            <label for="BookImage" class="col-sm-5 col-lg-3 control-label">Inne zdjęcie</label>
                            <div class="col-sm-7 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-btn">
                                        <span class="btn btn-default btn-file">
                                            @name
                                            Wybierz <input type="file" id=@idname for="BookImage" name=@name value="@Model.BookImages.FirstOrDefault()">
                                        </span>
                                    </span>
                                    <input type="text" class="form-control" readonly>
                                </div>
                                <img src="@img" id=@idnameImg />
                            </div>
                        </div>
                        k++;
                    }
                }
                <div class="form-group">
                    <label for="Genre" class="col-sm-5 col-lg-3 control-label">Gatunek</label>
                    <div class="col-sm-7 col-lg-9">
                        @Html.DropDownListFor(m => m.Genre, new SelectList(new List<string>() { "Fantastyka", "Sci Fi", "Kryminały", "Romanse", "Dla dzieci", "Horrory", "Kuchnia", "Biografie", "Historyczne", "Literatura poważna", "Turystyka", "Dramat", "Sensacyjne" }),
new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="changeable" class="col-sm-5 col-lg-9 control-label">Czy chcesz wymienić się na inną książkę?</label>

                    <div class="btn-group btn-toggle">
                        <label>@Html.RadioButtonFor(i => i.Changeable, true, new { @class = "btn btn-sm btn-default", Checked = "checked" })Tak</label>
                        <label>@Html.RadioButtonFor(i => i.Changeable, false, new { @class = "btn btn-sm btn-default" })Nie</label>
                    </div>
                </div>



                <div class="form-group">
                    <label for="Publisher" class="col-sm-5 col-lg-3 control-label">Wydawca</label>
                    <div class="col-sm-7 col-lg-9">
                        @Html.TextBoxFor(m => m.Publisher,
new { @class = "form-control", placeholder = "Wydawca", Type = "text" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="PublicationDate" class="col-sm-5 col-lg-3 control-label">Data wydania</label>
                    <div class="col-sm-7 col-lg-9">
                        @Html.TextBoxFor(m => m.PublicationDate,
new { @class = "form-control", Type = "date" })
                    </div>
                </div>


                <h2>Opcje dostawy</h2>
                <h4>Wybierz sposób dostawy który będzie dla Ciebie najlepszy.</h4>

                @{

                    var deliveryList = new AppDbContext().DeliveryOptions.Where(m => m.DeliveryPriceId == Model.Id);
                    int j = 1;
                    string[] tab = new string[4] { "Odbiór osobisty", "Przesyłka pocztowa - priorytetowa", "Przesyłka pocztowa - ekonomiczna", "Przesyłka kurierska" };
                    int l = 0;
                    foreach (var delivery in deliveryList)
                    {
                        Model.DeliveryDict[delivery.Name] = delivery.Price;
                        if (tab[l] != delivery.Name)
                        {
                            tab[l] = "";
                            l++;
                        }
                        l++;
                    }

                    l = 0;
                    foreach (KeyValuePair<string, float> dictonary in Model.DeliveryDict)
                    {
                        string id = j + "t";
                        string deliveryBool = "deliveryBool" + j;
                        <br />
                        if (tab[l] == dictonary.Key)
                        {
                            if (dictonary.Key == "Odbiór osobisty")
                            {
                                <div class="form-group">
                                    <br />
                                    <label for="DeliveryName" class="col-sm-7 col-lg-7 control-label">
                                        @Html.CheckBox(@deliveryBool, true) @dictonary.Key
                                    </label>
                                    <div id="@id" class="col-sm-5 col-lg-3" style="visibility: hidden">
                                        @Html.TextBoxFor(m => m.DeliveryDict[dictonary.Key],
                         new { @class = "form-control", Type = "number", min = "0", Value = dictonary.Value })
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="form-group">
                                    <br />
                                    <label for="DeliveryName" class="col-sm-7 col-lg-7 control-label">
                                        @Html.CheckBox(@deliveryBool, true) @dictonary.Key
                                    </label>
                                    <div id="@id" class="col-sm-5 col-lg-3">
                                        @Html.TextBoxFor(m => m.DeliveryDict[dictonary.Key],
                         new { @class = "form-control", Type = "number", min = "0", Value = dictonary.Value })
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="form-group">
                                <br />
                                <label for="DeliveryName" class="col-sm-7 col-lg-7 control-label">
                                    @Html.CheckBox(@deliveryBool, false) @dictonary.Key
                                </label>
                                <div id="@id" class="col-sm-5 col-lg-3" style="display: none">
                                    @Html.TextBoxFor(m => m.DeliveryDict[dictonary.Key],
                         new { @class = "form-control", Type = "number", min = "0", Value = dictonary.Value })
                                </div>
                            </div>
                        }


                        j++;
                        l++;
                    }
                }
                <br />
                <div class="form-group">
                    <div class="col-lg-offset-9">
                        <br />
                        <button type="submit" class="btn btn-primary">Edytuj</button>
                        <a href="/myaccount/mybooks" class="btn btn-danger">Cofnij</a>
                    </div>
                </div>
            </form>
        </div>
    </fieldset>




    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                    }

